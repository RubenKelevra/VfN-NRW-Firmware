#!/bin/sh

mt_comm_switch='/etc/NO_COMMUNITY_MAINTAIN_KEYS'

#check if autoupgrade is disabled
if [ "$(uci -q get freifunk.fw.autoupgrade)" == "0" ] ; then
  echo "autoupgrade is disabled"
  exit 0
fi

FWFILE=$(uci get freifunk.fw.filename)
DISTRIBUTION=$(uci get freifunk.fw.distribution)

LOCALBUILD=$(cat /build)
REMOTEBUILD=$(ff-curl firmware2/$DISTRIBUTION/build)

if [ "0$REMOTEBUILD" -gt "0$LOCALBUILD" ] ; then
  cd /tmp || exit 1
  
  echo 3 > /proc/sys/vm/drop_caches
  if [ ! -f "$mt_comm_switch" ]; then
    ff-curl firmware2/$DISTRIBUTION/"$FWFILE".sig -o firmware.sig || exit 1
    ff-curl firmware2/$DISTRIBUTION/"$FWFILE" -o firmware.bin || exit 1
  else #fetch new firmware without maintain-keys
    ff-curl no_maintain_fw2/$DISTRIBUTION/"$FWFILE".sig -o firmware.sig || exit 1
    ff-curl no_maintain_fw2/$DISTRIBUTION/"$FWFILE" -o firmware.bin || exit 1
  fi

  echo 3 > /proc/sys/vm/drop_caches

  PARAMpubkeys=$(cat /etc/freifunk/fwupgrade/nightly  | awk '{if ($1 != "") print "-p " $1}' | sed ':a;N;$!ba;s/\n/ /g')
  PARAMsignatures=$(cat firmware.sig | awk '{if ($1 != "") print "-s " $1}' | sed ':a;N;$!ba;s/\n/ /g')
  ecdsaverify $PARAMsignatures $PARAMpubkeys firmware.bin || exit 1

  sysupgrade $@ firmware.bin
fi
